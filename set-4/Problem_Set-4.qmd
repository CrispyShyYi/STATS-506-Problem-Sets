---
title: "Problem Set 4"
author: "Jialiang Wu"
format:
  html:
    theme: default
    page-layout: article
    code-fold: true
    code-summary: "Show the code"
    embed-resources: true
editor: visual
---


For source files and data, see my GitHub repo: [STATS-506-Problem-Sets-04](https://github.com/CrispyShyYi/STATS-506-Problem-Sets/tree/main/set-4)

## Set Up
```{r setup tidyverse}
library(tidyverse)
library(ggplot2)
```

## Question 1

### load `nzelect`
```{r setup_question1}
library(nzelect)
data("nzge")
# stick within tidyverse
nzge <- as_tibble(nzge)
```

### question 1-a
```{r q1a}
# group by year and type
vote_summary <- nzge %>%
  group_by(election_year, voting_type) %>%
  summarize(total_votes = sum(votes, na.rm = TRUE)) %>%
  arrange(desc(total_votes)) %>%   # sort by vote count
  ungroup()

# display output
vote_summary
```

### question 1-b
```{r rq1b}
candidate_2014 <- nzge %>%
  filter(election_year == 2014, voting_type == "Candidate") %>%
  group_by(party) %>%
  summarise(total_votes = sum(votes, na.rm = TRUE)) %>%
  mutate(percent = round(total_votes / sum(total_votes) * 100, 3)) %>%
  arrange(desc(percent)) %>%
  ungroup()

# display result
candidate_2014
```

### question 1-c
```{r q1c}
winners <- nzge %>%
  group_by(election_year, voting_type, party) %>%
  summarise(total_votes = sum(votes, na.rm = TRUE), .groups = "drop_last") %>%
  slice_max(total_votes, n = 1, with_ties = FALSE) %>%
  pivot_wider(
    id_cols = election_year,
    names_from = voting_type,
    values_from = party,
    names_prefix = "winner_"
  ) %>%
  arrange(election_year)

# display result
winners
```

\newpage

## Question 2
```{r load data}
ATP <- readr::read_delim("https://raw.githubusercontent.com/JeffSackmann/tennis_atp/refs/heads/master/atp_matches_2019.csv", show_col_types = FALSE)
```

### question 2-a
In the ATP Matches dataset, the Davis Cup is recorded differently from regular ATP tournaments.
Each Davis Cup tie (e.g., France vs Japan, Spain vs Russia) is assigned its own tourney_id.
This means that if we simply count distinct(tourney_id), the Davis Cup will appear as many separate tournaments, which would artificially inflate the number of tournaments in 2019.

To address this, we need to group all tourney_id values that belong to the Davis Cup (those containing "2019-M-DC") and treat them as one single tournament.
For the rest of the tournaments, we can safely count distinct tourney_id values directly.

Thus, the total number of tournaments in 2019 is calculated as:

Number of tournaments = distinct non–Davis Cup tourney_ids + 1 (for Davis Cup)

```{r q2a}
# Split into Davis Cup vs others
davis_ids <- ATP %>%
  filter(grepl("2019-M-DC", tourney_id)) %>%
  distinct(tourney_id)

other_ids <- ATP %>%
  filter(!grepl("2019-M-DC", tourney_id)) %>%
  distinct(tourney_id)

# Final tournament count: all others + 1 for Davis Cup
n_tournaments <- nrow(other_ids) + 1

n_tournaments
```

**Comment:** There are 128 tournaments took place in 2019

### question 2-b
The Laver Cup (tournament_id: 2019-9210)  is a special team exhibition event (Team Europe vs Team World).
Unlike standard ATP tournaments, it does not have a single final match (round == "F") that produces an individual player champion. Also, the Davis Cup is a national team competition, not an individual tournament, which means the winner is the nation’s team, not an individual player.
Instead, the winner is a team, determined by cumulative points across multiple singles and doubles matches.

Therefore, for Question 2-b (counting how many players won multiple tournaments and identifying the player(s) with the most titles), the Laver Cup and The Davis Cup should be excluded from the statistics.
```{r q2b}
# Exclude Davis Cup and Laver Cup
ATP_clean <- ATP %>%
  filter(!grepl("2019-M-DC", tourney_id),
         tourney_id != "2019-9210")

# Tournament winners (Final round winners)
tourney_winners <- ATP_clean %>%
  filter(round == "F") %>%
  select(tourney_id, tourney_name, winner_id, winner_name) %>%
  distinct()

# Count titles per player
player_titles <- tourney_winners %>%
  group_by(winner_id, winner_name) %>%
  summarise(num_titles = n()) %>%
  ungroup()

# Players with more than one title
multiple_winners <- player_titles %>%
  filter(num_titles > 1)

# display Results
n_players_multiple <- nrow(multiple_winners)
max_titles <- max(player_titles$num_titles)

n_players_multiple
max_titles
```

**Answer:** There are 12 players won more than one tournament, and the most winning player won 5 tournaments.

### question 2-c
```{r q2c}
# Summarize mean and median aces
aces_summary <- ATP %>%
  summarise(
    mean_winner_aces = mean(w_ace, na.rm = TRUE),
    mean_loser_aces  = mean(l_ace, na.rm = TRUE),
    median_winner_aces = median(w_ace, na.rm = TRUE),
    median_loser_aces  = median(l_ace, na.rm = TRUE)
  )

print(aces_summary)

# Reshape to plot distributions
aces_long <- ATP %>%
  select(w_ace, l_ace) %>%
  rename(Winner = w_ace, Loser = l_ace) %>%
  tidyr::pivot_longer(cols = c(Winner, Loser), names_to = "Role", values_to = "Aces")

# Compare distributions
ggplot(aces_long, aes(x = Role, y = Aces, fill = Role)) +
  geom_boxplot() +
  labs(title = "Distribution of Aces: Winners vs Losers (2019)")
```

**Comment:** There is clear descriptive evidence that match winners tend to serve more aces than losers in 2019. While not a formal hypothesis test, the mean, median, and distribution comparisons all point in the same direction.

### question 2-d
For each player, the win rate = number of matches won / total matches played
```{r q2d}
# Wins per player
wins <- ATP %>%
  count(winner_name, name = "wins")

# Losses per player
losses <- ATP %>%
  count(loser_name, name = "losses")

# Combine and calculate win-rate
player_stats <- full_join(wins, losses,
                          by = c("winner_name" = "loser_name")) %>%
  rename(player = winner_name) %>%
  mutate(
    wins   = ifelse(is.na(wins), 0, wins),
    losses = ifelse(is.na(losses), 0, losses),
    total  = wins + losses,
    win_rate = wins / total
  ) %>%
  filter(total >= 5)

# Who has the highest win-rate?
top_players <- player_stats %>%
  filter(win_rate == max(win_rate, na.rm = TRUE))

top_players
```
**Answer:** As a result Rafael Nadal has the highest win-rate in tournament 2019.

\newpage

## Question 3
### laod data set
```{r setup_question3}
covid <- readr::read_delim("https://raw.githubusercontent.com/nytimes/covid-19-data/refs/heads/master/rolling-averages/us.csv", show_col_types = FALSE)
```

### question 3-a
```{r q3a}

```

